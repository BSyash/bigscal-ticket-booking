{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apas\\\\Desktop\\\\p\\\\bus_ticket_booking\\\\src\\\\Buses\\\\Bus.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { removeSeats, seats } from '../Features/BusTicketslice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Bus = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const selectedSit = useSelector(state => state.busTicket.selectedSeats);\n  const [seat, setseats] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]);\n\n  const selectseat = e => {\n    console.log('targewt', e.target.value);\n    const className = e.target.className;\n\n    if (className == 'whitebox') {\n      const id = e.target.value;\n      dispatch(seats(id));\n      e.target.classList = 'greenbox';\n    } else {\n      e.target.className = 'whitebox';\n      const id = e.target.value;\n      const filter = selectedSit.filter(val => {\n        return val != id;\n      });\n      dispatch(removeSeats(filter));\n    }\n  };\n\n  const confirmSeats = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"busSeats\",\n      children: seat.map((val, id) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"whitebox\",\n          value: val,\n          onClick: e => selectseat(e),\n          outline: true,\n          children: val\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/ticket\",\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => confirmSeats(),\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 47\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Bus, \"DpzD1t6IsDxg+EjeCwZgmXRMUyE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Bus;\nexport default Bus;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bus\");","map":{"version":3,"sources":["C:/Users/apas/Desktop/p/bus_ticket_booking/src/Buses/Bus.js"],"names":["React","useState","useDispatch","useSelector","Link","removeSeats","seats","Bus","dispatch","selectedSit","state","busTicket","selectedSeats","seat","setseats","selectseat","e","console","log","target","value","className","id","classList","filter","val","confirmSeats","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,KAAtB,QAAmC,4BAAnC;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,WAAW,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,SAAN,CAAgBC,aAA1B,CAA/B;AAEA,QAAM,CAACC,IAAD,EAAOC,QAAP,IAAmBb,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC,EAA4C,EAA5C,EAAgD,EAAhD,EAAoD,EAApD,EAAwD,EAAxD,EAA4D,EAA5D,CAAD,CAAjC;;AAIA,QAAMc,UAAU,GAAIC,CAAD,IAAO;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,CAAC,CAACG,MAAF,CAASC,KAAhC;AAEA,UAAMC,SAAS,GAAGL,CAAC,CAACG,MAAF,CAASE,SAA3B;;AACA,QAAIA,SAAS,IAAI,UAAjB,EAA6B;AACzB,YAAMC,EAAE,GAAGN,CAAC,CAACG,MAAF,CAASC,KAApB;AACAZ,MAAAA,QAAQ,CAACF,KAAK,CAACgB,EAAD,CAAN,CAAR;AAEAN,MAAAA,CAAC,CAACG,MAAF,CAASI,SAAT,GAAqB,UAArB;AACH,KALD,MAKO;AACHP,MAAAA,CAAC,CAACG,MAAF,CAASE,SAAT,GAAqB,UAArB;AACA,YAAMC,EAAE,GAAGN,CAAC,CAACG,MAAF,CAASC,KAApB;AACA,YAAMI,MAAM,GAAGf,WAAW,CAACe,MAAZ,CACVC,GAAD,IAAS;AACL,eAAQA,GAAG,IAAIH,EAAf;AACH,OAHU,CAAf;AAKAd,MAAAA,QAAQ,CAACH,WAAW,CAACmB,MAAD,CAAZ,CAAR;AACH;AACJ,GAnBD;;AAoBA,QAAME,YAAY,GAAG,MAAM,CAE1B,CAFD;;AAIA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACKb,IAAI,CAACc,GAAL,CAAS,CAACF,GAAD,EAAMH,EAAN,KAAa;AACnB,4BAAQ;AAAQ,UAAA,SAAS,EAAC,UAAlB;AAA6B,UAAA,KAAK,EAAEG,GAApC;AAAyC,UAAA,OAAO,EAAGT,CAAD,IAAOD,UAAU,CAACC,CAAD,CAAnE;AAAiF,UAAA,OAAO,MAAxF;AAAA,oBAA6FS;AAA7F,WAA6EH,EAA7E;AAAA;AAAA;AAAA;AAAA,gBAAR;AACH,OAFA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,oBAMsC;AAAQ,MAAA,OAAO,EAAE,MAAMI,YAAY,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANtC;AAAA,kBADJ;AAUH,CA1CD;;GAAMnB,G;UACeL,W,EACGC,W;;;KAFlBI,G;AA4CN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { removeSeats, seats } from '../Features/BusTicketslice'\r\n\r\nconst Bus = () => {\r\n    const dispatch = useDispatch()\r\n    const selectedSit = useSelector(state => state.busTicket.selectedSeats)\r\n\r\n    const [seat, setseats] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18])\r\n  \r\n\r\n\r\n    const selectseat = (e) => {\r\n        console.log('targewt', e.target.value);\r\n\r\n        const className = e.target.className\r\n        if (className == 'whitebox') {\r\n            const id = e.target.value\r\n            dispatch(seats(id))\r\n            \r\n            e.target.classList = 'greenbox'\r\n        } else {\r\n            e.target.className = 'whitebox'\r\n            const id = e.target.value\r\n            const filter = selectedSit.filter(\r\n                (val) => {\r\n                    return (val != id)\r\n                }\r\n            )\r\n            dispatch(removeSeats(filter))\r\n        }\r\n    }\r\n    const confirmSeats = () => {\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className='busSeats'>\r\n                {seat.map((val, id) => {\r\n                    return (<button className='whitebox' value={val} onClick={(e) => selectseat(e)} key={id} outline  >{ val}</button>)\r\n                })}\r\n            </div>\r\n            <Link to='/ticket'>Confirm</Link> <button onClick={() => confirmSeats()}>Confirm</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Bus\r\n"]},"metadata":{},"sourceType":"module"}