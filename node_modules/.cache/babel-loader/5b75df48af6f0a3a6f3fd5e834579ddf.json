{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\apas\\\\Desktop\\\\p\\\\bus_ticket_booking\\\\src\\\\FromToDestinationPage\\\\FromToDestination.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Bus from '../Buses/Bus';\nimport { getdataOfUsers } from '../Features/BusTicketslice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FromToDestination = () => {\n  _s();\n\n  const [open, setopen] = useState(false);\n  const [ticketData, setticketData] = useState({\n    name: '',\n    number: '',\n    pickupPoint: '',\n    dropPoint: '',\n    date: ''\n  });\n  let ourState = [\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jammu and Kashmir\", \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \"Tripura\", \"Uttarakhand\", \"Uttar Pradesh\", \"West Bengal\", \"Andaman and Nicobar Islands\", \"Chandigarh\", \"Dadra and Nagar Haveli\", \"Daman and Diu\", \"Delhi\", \"Lakshadweep\", \"Puducherry\"];\n  const dispatch = useDispatch();\n\n  const searchBuses = e => {\n    e.preventDefault();\n\n    if (ticketData.name && ticketData.number && ticketData.pickupPoint && ticketData.date && ticketData.dropPoint) {\n      dispatch(getdataOfUsers(ticketData));\n      setopen(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ticketBookingForm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"enter your name\",\n          onChange: e => setticketData({ ...ticketData,\n            [e.target.name]: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"number\",\n          placeholder: \"enter your number\",\n          onChange: e => setticketData({ ...ticketData,\n            [e.target.name]: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"pickupPoint\",\n          id: \"pickupPoint\",\n          onChange: e => setticketData({ ...ticketData,\n            [e.target.name]: e.target.value\n          }),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            hidden: true,\n            children: \"FROM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), ourState === null || ourState === void 0 ? void 0 : ourState.map(states => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: states,\n            children: states\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 53\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"dropPoint\",\n          id: \"dropPoint\",\n          onChange: e => setticketData({ ...ticketData,\n            [e.target.name]: e.target.value\n          }),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            hidden: true,\n            children: \"TO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), ourState === null || ourState === void 0 ? void 0 : ourState.map(states => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: states,\n            children: states\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 53\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"Date\",\n          name: \"date\",\n          onChange: e => setticketData({ ...ticketData,\n            [e.target.name]: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: e => searchBuses(e),\n          children: \"select seat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), open && /*#__PURE__*/_jsxDEV(Bus, {\n      ticketData: ticketData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FromToDestination, \"kcg/RHDKoiFempaKT9t3C9LGaTs=\", false, function () {\n  return [useDispatch];\n});\n\n_c = FromToDestination;\nexport default FromToDestination;\n\nvar _c;\n\n$RefreshReg$(_c, \"FromToDestination\");","map":{"version":3,"sources":["C:/Users/apas/Desktop/p/bus_ticket_booking/src/FromToDestinationPage/FromToDestination.js"],"names":["React","useState","useDispatch","useSelector","Bus","getdataOfUsers","FromToDestination","open","setopen","ticketData","setticketData","name","number","pickupPoint","dropPoint","date","ourState","dispatch","searchBuses","e","preventDefault","target","value","map","states"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Bus from '../Buses/Bus'\r\nimport { getdataOfUsers } from '../Features/BusTicketslice'\r\n\r\nconst FromToDestination = () => {\r\n    \r\n    const [open, setopen] = useState(false)\r\n    const [ticketData, setticketData] = useState({\r\n        name: '',\r\n        number: '',\r\n        pickupPoint: '',\r\n        dropPoint: '',\r\n        date: '',\r\n    })\r\n    \r\n    let ourState = [\"Andhra Pradesh\",\r\n        \"Arunachal Pradesh\",\r\n        \"Assam\",\r\n        \"Bihar\",\r\n        \"Chhattisgarh\",\r\n        \"Goa\",\r\n        \"Gujarat\",\r\n        \"Haryana\",\r\n        \"Himachal Pradesh\",\r\n        \"Jammu and Kashmir\",\r\n        \"Jharkhand\",\r\n        \"Karnataka\",\r\n        \"Kerala\",\r\n        \"Madhya Pradesh\",\r\n        \"Maharashtra\",\r\n        \"Manipur\",\r\n        \"Meghalaya\",\r\n        \"Mizoram\",\r\n        \"Nagaland\",\r\n        \"Odisha\",\r\n        \"Punjab\",\r\n        \"Rajasthan\",\r\n        \"Sikkim\",\r\n        \"Tamil Nadu\",\r\n        \"Telangana\",\r\n        \"Tripura\",\r\n        \"Uttarakhand\",\r\n        \"Uttar Pradesh\",\r\n        \"West Bengal\",\r\n        \"Andaman and Nicobar Islands\",\r\n        \"Chandigarh\",\r\n        \"Dadra and Nagar Haveli\",\r\n        \"Daman and Diu\",\r\n        \"Delhi\",\r\n        \"Lakshadweep\",\r\n        \"Puducherry\"]\r\n    const dispatch = useDispatch()\r\n    const searchBuses = (e) => {\r\n        e.preventDefault()\r\n        if (ticketData.name && ticketData.number && ticketData.pickupPoint && ticketData.date && ticketData.dropPoint) {\r\n            dispatch(getdataOfUsers(ticketData))\r\n            setopen(true)\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className='ticketBookingForm'>\r\n                <form>\r\n                    <input type=\"text\" name='name' placeholder='enter your name' onChange={(e) => setticketData({ ...ticketData, [e.target.name]: e.target.value })} required={true} />\r\n\r\n                    <input type=\"text\" name='number' placeholder='enter your number' onChange={(e) => setticketData({ ...ticketData, [e.target.name]: e.target.value })} required={true} />\r\n                    <select name=\"pickupPoint\" id=\"pickupPoint\" onChange={(e) => setticketData({ ...ticketData, [e.target.name]: e.target.value })} required={true}>\r\n                        <option hidden={true}>FROM</option>\r\n                        {\r\n                            ourState?.map(states => <option value={states}>{states}</option>)\r\n                        }\r\n                    </select>\r\n\r\n                    <select name=\"dropPoint\" id=\"dropPoint\" onChange={(e) => setticketData({ ...ticketData, [e.target.name]: e.target.value })} required={true}>\r\n                        <option hidden={true}>TO</option>\r\n                        {\r\n                            ourState?.map(states => <option value={states}>{states}</option>)\r\n                        }\r\n                    </select>\r\n\r\n                    <input type=\"Date\" name='date' onChange={(e) => setticketData({ ...ticketData, [e.target.name]: e.target.value })} required={true} />\r\n                    <button type='submit' onClick={(e) => searchBuses(e)} >select seat</button>\r\n                </form>\r\n            </div>\r\n            {\r\n                open && <Bus ticketData={ ticketData}/>\r\n            }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default FromToDestination\r\n"]},"metadata":{},"sourceType":"module"}