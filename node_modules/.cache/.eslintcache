[{"C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\index.js":"1","C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\App.js":"2","C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\reportWebVitals.js":"3","C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\BusTicketBooking\\BusTicketBooking.js":"4","C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\FromToDestinationPage\\FromToDestination.js":"5","C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\app\\Store.js":"6","C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\Features\\BusTicketslice.js":"7","C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\Buses\\Bus.js":"8","C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\Datatable\\DataTable.js":"9","C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\Navbar\\Navbar.js":"10","C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\ShowTicket\\ShowTicket.js":"11","C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\SearchTicket\\SearchTicket.js":"12","C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\LogIn\\LogIn.js":"13"},{"size":719,"mtime":1636517721847,"results":"14","hashOfConfig":"15"},{"size":364,"mtime":1636522820266,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1558,"mtime":1636525871885,"results":"18","hashOfConfig":"15"},{"size":5623,"mtime":1636522707386,"results":"19","hashOfConfig":"15"},{"size":210,"mtime":1636366086031,"results":"20","hashOfConfig":"15"},{"size":1152,"mtime":1636524683493,"results":"21","hashOfConfig":"15"},{"size":2362,"mtime":1636456843055,"results":"22","hashOfConfig":"15"},{"size":3616,"mtime":1636525256265,"results":"23","hashOfConfig":"15"},{"size":172,"mtime":1636458880212,"results":"24","hashOfConfig":"15"},{"size":4224,"mtime":1636521294587,"results":"25","hashOfConfig":"15"},{"size":792,"mtime":1636452596821,"results":"26","hashOfConfig":"15"},{"size":1758,"mtime":1636522528584,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gog761",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\index.js",[],"C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\App.js",["62","63"],"import { useHistory } from 'react-router-dom'\nimport './App.css';\nimport BusTicketBooking from './BusTicketBooking/BusTicketBooking';\nimport SearchTicket from './SearchTicket/SearchTicket';\n\nfunction App() {\n  const history = useHistory()\n  return (\n    <>\n\n      <div className=\"App\">\n        <BusTicketBooking />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\reportWebVitals.js",[],["64","65"],"C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\BusTicketBooking\\BusTicketBooking.js",["66","67"],"import React from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport FromToDestination from '../FromToDestinationPage/FromToDestination'\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport DataTable from '../Datatable/DataTable'\r\nimport ShowTicket from '../ShowTicket/ShowTicket';\r\nimport Navbar from '../Navbar/Navbar';\r\nimport LogIn from '../LogIn/LogIn';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signupUsers } from '../Features/BusTicketslice';\r\n\r\nconst BusTicketBooking = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const signUpDetails = useSelector(state => state.busTicket.signUpDetails)\r\n    return (\r\n        <>\r\n\r\n\r\n            <div className='userLogIn'> {signUpDetails[0] && <button onClick={() => {\r\n                history.push('/login')\r\n                dispatch(signupUsers())\r\n            }}>Log Out</button>}<span>{signUpDetails[0]?.email ? signUpDetails[0]?.email[0].toUpperCase() : \"u\"}</span> {signUpDetails[0]?.email ? signUpDetails[0]?.email : (<>user { history.push('/')}</>)}</div>\r\n\r\n            <Route exact path='/'>\r\n                <LogIn />\r\n            </Route>\r\n            \r\n            <Route exact path='/fromtodestination'>\r\n                <FromToDestination />\r\n            </Route>\r\n            <Route exact path='/ticket'>\r\n                <DataTable />\r\n            </Route>\r\n            <Route exact path='/showticket'>\r\n                <ShowTicket />\r\n            </Route>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BusTicketBooking\r\n","C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\FromToDestinationPage\\FromToDestination.js",["68","69","70","71","72","73","74"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Bus from '../Buses/Bus'\r\nimport SearchTicket from '../SearchTicket/SearchTicket'\r\n\r\nconst FromToDestination = () => {\r\n\r\n    const [open, setopen] = useState(false)\r\n    const [validatation, setvalidatation] = useState(false)\r\n    const [ticketData, setticketData] = useState({\r\n        name: '',\r\n        number: '',\r\n        age: '',\r\n        pickupPoint: '',\r\n        dropPoint: '',\r\n        date: '',\r\n        acnonac: '',\r\n        statecode: (new Date().getTime())\r\n    })\r\n\r\n    let ourState = [\"Andhra Pradesh\",\r\n        \"Arunachal Pradesh\",\r\n        \"Assam\",\r\n        \"Bihar\",\r\n        \"Chhattisgarh\",\r\n        \"Goa\",\r\n        \"Gujarat\",\r\n        \"Haryana\",\r\n        \"Himachal Pradesh\",\r\n        \"Jammu and Kashmir\",\r\n        \"Jharkhand\",\r\n        \"Karnataka\",\r\n        \"Kerala\",\r\n        \"Madhya Pradesh\",\r\n        \"Maharashtra\",\r\n        \"Manipur\",\r\n        \"Meghalaya\",\r\n        \"Mizoram\",\r\n        \"Nagaland\",\r\n        \"Odisha\",\r\n        \"Punjab\",\r\n        \"Rajasthan\",\r\n        \"Sikkim\",\r\n        \"Tamil Nadu\",\r\n        \"Telangana\",\r\n        \"Tripura\",\r\n        \"Uttarakhand\",\r\n        \"Uttar Pradesh\",\r\n        \"West Bengal\",\r\n        \"Andaman and Nicobar Islands\",\r\n        \"Chandigarh\",\r\n        \"Dadra and Nagar Haveli\",\r\n        \"Daman and Diu\",\r\n        \"Delhi\",\r\n        \"Lakshadweep\",\r\n        \"Puducherry\"]\r\n\r\n    const searchBuses = (e) => {\r\n        setvalidatation(true)\r\n        e.preventDefault()\r\n        if (ticketData.name && ticketData.number && ticketData.pickupPoint && ticketData.date && ticketData.dropPoint) {\r\n            // dispatch(getdataOfUsers(ticketData))\r\n            setopen(true)\r\n        }\r\n    }\r\n\r\n   \r\n    return (\r\n        <div className='ticketAndBus'>\r\n            <div className='ticketBookingForm'>\r\n\r\n                <form>\r\n                    <input type=\"text\" name='name' placeholder='enter your name' onChange={(e) => setticketData({ ...ticketData, [e.target.name]: e.target.value })} required={true} />\r\n\r\n                    {\r\n                        validatation && ticketData.name == \"\" && <small style={{ color: \"red\" }}>Name is required</small>\r\n                    }\r\n                    <input type=\"number\" name='age' placeholder='enter your age' onChange={(e) => setticketData({ ...ticketData, [e.target.name]: e.target.value })} required={true} />\r\n\r\n                    {\r\n                        validatation && ticketData.age == \"\" && <small style={{ color: \"red\" }}>age is required</small>\r\n                    }\r\n\r\n                    <input type=\"text\" name='number' placeholder='enter your number' onChange={(e) => setticketData({ ...ticketData, [e.target.name]: e.target.value })} required={true} />\r\n                    {\r\n                        validatation && ticketData.number == \"\" && <small style={{ color: \"red\" }}>number is required</small>\r\n                    }\r\n\r\n                    <select name=\"pickupPoint\" id=\"pickupPoint\" onChange={(e) => setticketData({ ...ticketData, [e.target.name]: e.target.value })} required={true}>\r\n                        <option hidden={true}>FROM</option>\r\n                        {\r\n                            ourState?.map(states => <option value={states}>{states}</option>)\r\n                        }\r\n                    </select>\r\n                    {\r\n                        validatation && ticketData.pickupPoint == \"\" && <small style={{ color: \"red\" }}>pickupPoint is required</small>\r\n                    }\r\n\r\n                    <select name=\"dropPoint\" id=\"dropPoint\" onChange={(e) => setticketData({ ...ticketData, [e.target.name]: e.target.value })} required={true}>\r\n                        <option hidden={true}>TO</option>\r\n                        {\r\n                            ourState?.map(states => <option value={states}>{states}</option>)\r\n                        }\r\n                    </select>\r\n                    {\r\n                        validatation && ticketData.dropPoint == \"\" && <small style={{ color: \"red\" }}>dropPoint is required</small>\r\n                    }\r\n                    <input type=\"Date\" name='date' onChange={(e) => setticketData({ ...ticketData, [e.target.name]: e.target.value })} required={true} />\r\n                    {\r\n                        validatation && ticketData.date == \"\" && <small style={{ color: \"red\" }}>date is required</small>\r\n                    }\r\n\r\n\r\n                    <select name=\"acnonac\" id=\"acnonac\" onChange={(e) => setticketData({ ...ticketData, [e.target.name]: e.target.value })} required={true}>\r\n                        <option hidden={true}>AC NonAC</option>\r\n                        <option value={700}>Non AC ($ 700)</option>\r\n                        <option value={1000}>AC ($ 1000)</option>\r\n                    </select>\r\n                    {\r\n                        validatation && ticketData.acnonac == \"\" && <small style={{ color: \"red\" }}>AC nonAC is required</small>\r\n                    }\r\n\r\n                    <button type='submit' onClick={(e) => searchBuses(e)} >select seat</button>\r\n                </form>\r\n                <hr />\r\n                \r\n\r\n                <div className=\"allTicketData\">\r\n                    <Link to='/ticket'>All Ticket Data</Link>\r\n                </div>\r\n                <hr />\r\n                <div className=\"seachSection\">\r\n                    <SearchTicket />\r\n                </div>\r\n            </div>\r\n            {\r\n                open && <Bus ticketData={ticketData} />\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FromToDestination\r\n","C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\app\\Store.js",[],"C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\Features\\BusTicketslice.js",[],"C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\Buses\\Bus.js",["75","76","77","78","79","80","81","82"],"import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { emptySeats, getdataOfUsers, removeSeats, seats } from '../Features/BusTicketslice'\r\nimport swal from 'sweetalert';\r\n\r\n\r\nconst Bus = ({ ticketData }) => {\r\n    const dispatch = useDispatch()\r\n    const selectedSit = useSelector(state => state.busTicket.selectedSeats)\r\n    const ticketDetails = useSelector(state => state.busTicket.ticketDetails)\r\n\r\n    const [seat, setseats] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18])\r\n    const history = useHistory()\r\n\r\n    const selectseat = (e) => {\r\n\r\n        const className = e.target.className\r\n        if (className == 'whitebox') {\r\n            const id = e.target.value\r\n            dispatch(seats(id))\r\n            e.target.classList = 'greenbox'\r\n        } else {\r\n            e.target.className = 'whitebox'\r\n            const id = e.target.value\r\n            const filter = selectedSit.filter(\r\n                (val) => {\r\n                    return (val != id)\r\n                }\r\n            )\r\n            dispatch(removeSeats(filter))\r\n        }\r\n    }\r\n    let selectedSits = []\r\n    const TicketDate = ticketDetails?.filter((Details) => (\r\n        Details?.date == ticketData?.date && Details?.pickupPoint == ticketData?.pickupPoint && Details?.dropPoint == ticketData?.dropPoint && Details?.acnonac == ticketData?.acnonac\r\n    ))?.map(items => selectedSits.push(...items.selectedSeats))\r\n\r\n\r\n\r\n    const Confirmseats = () => {\r\n        dispatch(getdataOfUsers({ ...ticketData, selectedSeats: selectedSit }))\r\n        dispatch(emptySeats())\r\n        swal({\r\n            title: \"Your Sit Booked Success!\",\r\n            text: \"Enjoy Your Journey!\",\r\n            icon: \"success\",\r\n            button: \"welCome!\",\r\n        })\r\n        history.push('/ticket')\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className='busSeats'>\r\n                {seat.map((val, id) => {\r\n\r\n\r\n                    return (<button className='whitebox' value={val} onClick={(e) => selectseat(e)} key={id} outline disabled={selectedSits?.includes(String(val))}  >{val}</button>)\r\n                })}\r\n                <button onClick={() => Confirmseats()}>Confirm</button>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Bus\r\n","C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\Datatable\\DataTable.js",["83","84"],"import React from 'react'\r\nimport { Table } from 'reactstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { deletedataOfUsers } from '../Features/BusTicketslice';\r\nimport SearchTicket from '../SearchTicket/SearchTicket';\r\nimport swal from 'sweetalert';\r\n\r\nconst DataTable = () => {\r\n    const history = useHistory()\r\n    const ticketDetails = useSelector(state => state.busTicket.ticketDetails)\r\n    const dispatch = useDispatch()\r\n    const deleteDeatil = (i) => {\r\n\r\n\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            text: \"Once deleted, you will not be able to recover this imaginary file!\",\r\n            icon: \"warning\",\r\n            buttons: true,\r\n            dangerMode: true,\r\n        })\r\n            .then((willDelete) => {\r\n                if (willDelete) {\r\n                    const filterDetails = ticketDetails?.filter((tickets, id) => id != i)\r\n                    dispatch(deletedataOfUsers(filterDetails))\r\n                    swal(\"Poof! Your imaginary file has been deleted!\", {\r\n                        icon: \"success\",\r\n                    });\r\n                }\r\n                else {\r\n                    swal(\"Your imaginary file is safe!\");\r\n                }\r\n            });\r\n\r\n    }\r\n\r\n\r\n    return (<>\r\n        <button onClick={() => history.push('/fromtodestination')}>back</button>\r\n        <Table >\r\n            <thead>\r\n                <tr>\r\n                    <th>id</th>\r\n                    <th>name</th>\r\n                    <th>age</th>\r\n                    <th>number</th>\r\n                    <th>date</th>\r\n                    <th>pichupPoint</th>\r\n                    <th>dropPoint</th>\r\n                    <th>AC or NonAC</th>\r\n                    <th>Seat numbers</th>\r\n                    <th>Total Seats</th>\r\n                    <th>Total Amount $ </th>\r\n                    <th>States Code</th>\r\n                    <th>Status</th>\r\n                    <th>Action</th>\r\n                    <th>delete Ticket</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    ticketDetails?.map((details, i) =>\r\n                        <tr>\r\n                            <th>{i + 1}</th>\r\n                            <th>{details?.name}</th>\r\n                            <th>{details?.age}</th>\r\n                            <th>{details?.number}</th>\r\n                            <th>{details?.date}</th>\r\n                            <th>{details?.pickupPoint}</th>\r\n                            <th>{details?.dropPoint}</th>\r\n                            <th>{(details?.acnonac) === '1000' ? 'AC' : 'NonAc'}</th>\r\n                            <th>{details?.selectedSeats?.map(seat => ` ${seat} `)}</th>\r\n                            <th>{details?.selectedSeats?.length}</th>\r\n                            <th>$ {(details?.selectedSeats?.length) * Number(details?.acnonac)}</th>\r\n                            <th>{details?.statecode}</th>\r\n                            <th>SuccessFull</th>\r\n                            <th><button style={{ backgroundColor: 'lightgreen', padding: '5px' }} onClick={() => history.push('/showticket', details)}>Show Ticket</button></th>\r\n                            <th><button style={{ backgroundColor: 'red', padding: '5px', color: 'white' }} onClick={() => deleteDeatil(i)}>Delete</button></th>\r\n\r\n                        </tr>\r\n                    )\r\n                }\r\n\r\n            </tbody>\r\n        </Table>\r\n\r\n    </>\r\n    )\r\n}\r\n\r\nexport default DataTable\r\n","C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\Navbar\\Navbar.js",[],"C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\ShowTicket\\ShowTicket.js",["85"],"import React from 'react'\r\nimport { useHistory, useLocation } from 'react-router';\r\n\r\nconst ShowTicket = () => {\r\n    const history = useHistory()\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <div className='showTickets'>\r\n\r\n\r\n            <header>\r\n                <h1>Ticket Invoice</h1>\r\n                <address contenteditable>\r\n                    <h4>Name : {location.state?.name}</h4>\r\n                    <h4>Number : {location.state?.number}</h4>\r\n\r\n                </address>\r\n\r\n                <span><img alt=\"\" src=\"http://www.jonathantneal.com/examples/invoice/logo.png\" /><input type=\"file\" accept=\"image/*\" /></span>\r\n            </header>\r\n            <article>\r\n                <h1>Recipient</h1>\r\n\r\n                <table class=\"meta\">\r\n                    <tr>\r\n                        <th><span contenteditable>Invoice #</span></th>\r\n                        <td><span contenteditable style={{ backgroundColor: 'bisque' }}>{location?.state?.statecode}</span></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th><span contenteditable>Date</span></th>\r\n                        <td><span contenteditable>{location?.state?.date}</span></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th><span contenteditable>Amount Due</span></th>\r\n                        <td><span id=\"prefix\" contenteditable>$</span><span>{(location?.state?.selectedSeats?.length) * (location?.state?.acnonac)}</span></td>\r\n                    </tr>\r\n                </table>\r\n                <table class=\"inventory\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th><span contenteditable>Item</span></th>\r\n                            <th><span contenteditable>age</span></th>\r\n                            <th><span contenteditable>Rate</span></th>\r\n                            <th><span contenteditable>AC - NonAc</span></th>\r\n\r\n                            <th><span contenteditable>Seats</span></th>\r\n                            <th><span contenteditable>Price</span></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td><span contenteditable>Bus Ticket</span></td>\r\n                            <td><span contenteditable>{location.state?.age}</span></td>\r\n                            <td><span data-prefix>$</span><span contenteditable>{location.state?.acnonac}</span></td>\r\n                            <td> <span contenteditable>{location.state?.acnonac == '1000' ? 'AC' : 'Non Ac'}</span></td>\r\n\r\n                            <td><span contenteditable>{location?.state?.selectedSeats?.length}</span></td>\r\n                            <td id='price' style={{ backgroundColor: 'yellowgreen' }}><span data-prefix>$</span><span>{(location?.state?.selectedSeats?.length) * (location?.state?.acnonac)}</span></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n\r\n                <table class=\"balance\">\r\n                    <tr>\r\n                        <th><span contenteditable>Total</span></th>\r\n                        <td><span data-prefix>$</span><span>{(location?.state?.selectedSeats?.length) * (location?.state?.acnonac)}</span></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th><span contenteditable>Amount Paid</span></th>\r\n                        <td><span data-prefix>$</span><span contenteditable>{(location?.state?.selectedSeats?.length) * (location?.state?.acnonac)}</span></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th><span contenteditable>Balance Due</span></th>\r\n                        <td><span data-prefix>$</span><span>00.00</span></td>\r\n                    </tr>\r\n                </table>\r\n            </article>\r\n            <hr />\r\n            <div className=\"printAndback\">\r\n                <button id='printPageButton' onClick={() => window.print()}>Print</button>\r\n                <button id='printPageButton' onClick={() => history.push('/fromtodestination')}>Home</button>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowTicket\r\n","C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\SearchTicket\\SearchTicket.js",[],"C:\\Users\\apas\\Desktop\\p\\bus_ticket_booking\\src\\LogIn\\LogIn.js",["86","87"],"import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router'\r\nimport { signupUsers } from '../Features/BusTicketslice'\r\n\r\nconst LogIn = () => {\r\n    const [validatation, setvalidatation] = useState(false)\r\n    const [signUp, setsignUp] = useState({\r\n        email: '',\r\n        password: '',\r\n\r\n    })\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const LogIn = (e) => {\r\n        setvalidatation(true)\r\n        e.preventDefault()\r\n        if (signUp.email && signUp.password === 'test@1234') {\r\n            dispatch(signupUsers(signUp))\r\n            history.push('/fromtodestination')\r\n        }\r\n    }\r\n    return (\r\n        <div className='logInForm'>\r\n            <form >\r\n                <p><span>Welcome</span><span>To</span><span>BigScal</span><span>Travels</span></p>\r\n                <input type=\"email\" name='email' placeholder='Enter email' onChange={(e) => setsignUp({ ...signUp, [e.target.name]: e.target.value })} />\r\n                {\r\n                    validatation && signUp.email == \"\" && <small style={{ color: \"red\" }}>email is required</small>\r\n                }\r\n                <input type=\"password\" name='password' placeholder='enter  password' onChange={(e) => setsignUp({ ...signUp, [e.target.name]: e.target.value })} />\r\n                {\r\n                    validatation && signUp.password !== \"test@1234\" ? <small style={{ color: \"red\" }}>password is incorrect</small> : validatation && signUp.password == \"\" && <small style={{ color: \"red\" }}>password is required</small>\r\n                }\r\n                <button onClick={(e) => LogIn(e)}>Log In</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LogIn\r\n",{"ruleId":"88","severity":1,"message":"89","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":20},{"ruleId":"88","severity":1,"message":"92","line":7,"column":9,"nodeType":"90","messageId":"91","endLine":7,"endColumn":16},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"88","severity":1,"message":"97","line":4,"column":17,"nodeType":"90","messageId":"91","endLine":4,"endColumn":23},{"ruleId":"88","severity":1,"message":"98","line":7,"column":8,"nodeType":"90","messageId":"91","endLine":7,"endColumn":14},{"ruleId":"99","severity":1,"message":"100","line":77,"column":57,"nodeType":"101","messageId":"102","endLine":77,"endColumn":59},{"ruleId":"99","severity":1,"message":"100","line":82,"column":56,"nodeType":"101","messageId":"102","endLine":82,"endColumn":58},{"ruleId":"99","severity":1,"message":"100","line":87,"column":59,"nodeType":"101","messageId":"102","endLine":87,"endColumn":61},{"ruleId":"99","severity":1,"message":"100","line":97,"column":64,"nodeType":"101","messageId":"102","endLine":97,"endColumn":66},{"ruleId":"99","severity":1,"message":"100","line":107,"column":62,"nodeType":"101","messageId":"102","endLine":107,"endColumn":64},{"ruleId":"99","severity":1,"message":"100","line":111,"column":57,"nodeType":"101","messageId":"102","endLine":111,"endColumn":59},{"ruleId":"99","severity":1,"message":"100","line":121,"column":60,"nodeType":"101","messageId":"102","endLine":121,"endColumn":62},{"ruleId":"88","severity":1,"message":"103","line":13,"column":18,"nodeType":"90","messageId":"91","endLine":13,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":19,"column":23,"nodeType":"101","messageId":"102","endLine":19,"endColumn":25},{"ruleId":"99","severity":1,"message":"104","line":28,"column":33,"nodeType":"101","messageId":"102","endLine":28,"endColumn":35},{"ruleId":"88","severity":1,"message":"105","line":35,"column":11,"nodeType":"90","messageId":"91","endLine":35,"endColumn":21},{"ruleId":"99","severity":1,"message":"100","line":36,"column":23,"nodeType":"101","messageId":"102","endLine":36,"endColumn":25},{"ruleId":"99","severity":1,"message":"100","line":36,"column":67,"nodeType":"101","messageId":"102","endLine":36,"endColumn":69},{"ruleId":"99","severity":1,"message":"100","line":36,"column":116,"nodeType":"101","messageId":"102","endLine":36,"endColumn":118},{"ruleId":"99","severity":1,"message":"100","line":36,"column":161,"nodeType":"101","messageId":"102","endLine":36,"endColumn":163},{"ruleId":"88","severity":1,"message":"89","line":7,"column":8,"nodeType":"90","messageId":"91","endLine":7,"endColumn":20},{"ruleId":"99","severity":1,"message":"104","line":26,"column":85,"nodeType":"101","messageId":"102","endLine":26,"endColumn":87},{"ruleId":"99","severity":1,"message":"100","line":56,"column":81,"nodeType":"101","messageId":"102","endLine":56,"endColumn":83},{"ruleId":"99","severity":1,"message":"100","line":29,"column":50,"nodeType":"101","messageId":"102","endLine":29,"endColumn":52},{"ruleId":"99","severity":1,"message":"100","line":33,"column":167,"nodeType":"101","messageId":"102","endLine":33,"endColumn":169},"no-unused-vars","'SearchTicket' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","no-native-reassign",["106"],"no-negated-in-lhs",["107"],"'Switch' is defined but never used.","'Navbar' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setseats' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'TicketDate' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]